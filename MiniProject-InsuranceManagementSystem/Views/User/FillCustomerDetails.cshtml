@model MiniProject_InsuranceManagementSystem.Models.Customer

@{
    ViewBag.Title = "FillCustomerDetails";
}


<style>
    #insurances {
        background-color: royalblue;
        padding: 1rem;
        border-radius: 0.2rem;
        color: white;
        margin: 0;
    }

    body {
        background-color: darkgray;
    }

    hr {
        color: ghostwhite;
    }


    h1 {
        color: darkslateblue;
        font-weight: bold;
        font-family: 'Segoe UI',Tahoma, Geneva, Verdana, sans-serif;
        text-align: center;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }


    option {
        background-color: white;
        color: black;
    }
    select {
        /*        background-color: #22a344;
*/ background-color: darkslateblue;
        padding: 1rem;
        border-radius: 0.5rem;
        color: white;
        border-color: none;
    }

</style>


<button class="btn btn-primary" style="margin-top:2rem;margin-bottom:1rem;margin-left:1rem;">
    @Html.ActionLink("《 Back to Profile", "UserProfilePage", new { area = "" }, new { @style = "font-size:14px; color:white;" })
</button>

<hr>
<h1>Fill the Customer details</h1>
<hr style="margin-bottom:3rem">

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div style="border-radius: 1rem; box-shadow: 0px 7px 35px -4px black; background-color: white; margin: 1rem 30rem; padding: 2rem 0; ">

        <div class="form-horizontal">
 
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group" style="margin-left:10rem">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4", @style= "margin-left:-4rem;margin-bottom:0.5rem;" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Enter your FirstName", @style = "height:4rem;" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger", @style = "font-weight:bold" })
                    </div>
                </div>

                <div class="form-group" style="margin-left:10rem">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4", @style = "margin-left:-4rem;margin-bottom:0.5rem;" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control",required="required", placeholder = "Enter your LastName", @style = "height:4rem;" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger", @style = "font-weight:bold" })
                    </div>
                </div>

                <div class="form-group" style="margin-left:10rem;margin-bottom:2rem">
                    @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-5", @style = "margin-left:-5rem;margin-bottom:0.5rem;" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control",@Value="", required = "required", placeholder = "Enter mobile number", @style = "height:4rem; "} })
                        @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger",@style="font-weight:bold" })
                    </div>
                </div>

                <div class="form-group" style="margin-left:10rem;">
                    <div class="col-md-10">
                        <input type="submit" value="Proceed" class="btn btn-success btn-lg  btn-block" />
                    </div>
                </div>
            </div>
    </div>


}
@*<script>

   function mobileNumberBorderChanger() {
        
        let mobileNumber =document.getElementById("mobileNumber");
        if (mobileNumber.value.length == 10) {
            mobileNumber.style.borderColor = 'green';
        } else {
            mobileNumber.style.borderColor = 'red';

        }
    }
</script>*@


